version: "3.8"

services:
  flask:
    build:
      context: ./Backend
      dockerfile: Dockerfile_Backend_x86_or_GPU_Big
    container_name: flask-api
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    environment:
      - IsDocker=True
    networks:
      backend:
        ipv4_address: 172.142.1.4
      db_flask:
        ipv4_address: 172.142.5.2
      frontend:
        ipv4_address: 172.142.3.4
    ports:
      - "5555:5555"
    restart: unless-stopped

  libretranslate:
    container_name: libretranslate
    environment:
      - LT_API_KEYS=True
      - LT_API_KEYS_DB_PATH=/app/db/api_keys.db
      - LT_REQUIRE_API_KEY_ORIGIN=true
      - LT_UPDATE_MODELS=True
      - LT_LOAD_ONLY=en,fr,de
      - LT_SSL=True
      - LT_REQ_LIMIT=100
      - LT_BATCH_LIMIT=100
      - LT_CHAR_LIMIT=10000
      - LT_PORT=5000
      - LT_DEBUG=True
    healthcheck:
      test: ["CMD-SHELL", "./venv/bin/python scripts/healthcheck.py"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    image: libretranslate/libretranslate:latest
    networks:
      proxy:
        ipv4_address: 172.142.4.2
    restart: unless-stopped
    volumes:
      - libretranslate_api_keys:/app/db
      - libretranslate_models:/home/libretranslate/.local:rw

  mongo:
    command: >
      mongod --auth
             --tlsMode preferTLS
             --tlsCertificateKeyFile /etc/ssl/mongo.pem
             --tlsCAFile /etc/ssl/mongo.pem
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: |
        echo 'db.runCommand("ping").ok' | mongosh "mongodb://root:example@172.142.5.3:27017/?tls=true&tlsCAFile=/etc/ssl/mongo.pem&tlsCertificateKeyFile=/etc/ssl/mongo.pem" --quiet
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    image: mongo:latest
    networks:
      db_flask:
        ipv4_address: 172.142.5.3
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./Backend/resources/certs:/etc/ssl:ro

  nginx:
    container_name: nginx-proxy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://172.142.1.6 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    image: nginx:latest
    networks:
      backend:
        ipv4_address: 172.142.1.6
      proxy:
        ipv4_address: 172.142.4.3
    ports:
      - "55000:443"
    restart: always
    volumes:
      - ./backend/resources/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/resources/certs:/etc/nginx/certs:ro

  vite:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: vite
    networks:
      frontend:
        ipv4_address: 172.142.3.5
    ports:
      - "5173:5173"
    restart: unless-stopped

volumes:
  libretranslate_api_keys:
  libretranslate_models:
  mongo-data:

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.142.1.0/24
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.142.3.0/24
  proxy:
    driver: bridge
    ipam:
      config:
        - subnet: 172.142.4.0/24
  db_flask:
    driver: bridge
    ipam:
      config:
        - subnet: 172.142.5.0/24
