# Verwende ein schlankes NVIDIA CUDA-Basis-Image
FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

# Setze Umgebungsvariablen für Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/

# Installiere Python und andere notwendige Pakete
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.11 \
    python3.11-venv \
    python3-pip \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libcublas-12-1 \
    libcublas-dev-12-1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Setze Python als Standard
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Arbeitsverzeichnis im Container
WORKDIR /backend

# Kopiere die restlichen Projektdateien
COPY ./ /backend

# Installiere die CUDA-fähige Version von PyTorch explizit
RUN python3.11 -m pip install --no-cache-dir --upgrade pip \
    && python3.11 -m pip install --no-cache-dir torch==2.0.0+cu121 torchvision==0.15.0+cu121 torchaudio==2.0.0+cu121 --extra-index-url https://download.pytorch.org/whl/cu121  \
    && python3.11 -m pip install --no-cache-dir -r /backend/resources/resources.txt

# Expose-Port für die Anwendung
EXPOSE 5555

# Anwendung starten
CMD ["hypercorn", "-b", "0.0.0.0:5555", "--certfile", "./resources/certs/server.crt", "--keyfile", "./resources/certs/server.key", "backend.app.main:app"]
